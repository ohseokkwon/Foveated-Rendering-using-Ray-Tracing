//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-23083092
// Cuda compilation tools, release 9.1, V9.1.85
// Based on LLVM 3.4svn
//

.version 6.1
.target sm_30
.address_size 64

	// .globl	_Z14g_buffer_tracev
.extern .func  (.param .b32 func_retval0) vprintf
(
	.param .b64 vprintf_param_0,
	.param .b64 vprintf_param_1
)
;
.const .align 4 .b8 gaussian_weight[36] = {0, 0, 128, 61, 0, 0, 0, 62, 0, 0, 128, 61, 0, 0, 0, 62, 0, 0, 128, 62, 0, 0, 0, 62, 0, 0, 128, 61, 0, 0, 0, 62, 0, 0, 128, 61};
.const .align 4 .b8 gradient_weight[36] = {0, 0, 0, 190, 0, 0, 0, 190, 0, 0, 0, 190, 0, 0, 0, 190, 0, 0, 128, 63, 0, 0, 0, 190, 0, 0, 0, 190, 0, 0, 0, 190, 0, 0, 0, 190};
.const .align 8 .b8 offset[72] = {1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};
.const .align 4 .b8 gx[36] = {0, 0, 128, 191, 0, 0, 0, 128, 0, 0, 128, 63, 0, 0, 0, 192, 0, 0, 0, 0, 0, 0, 0, 64, 0, 0, 128, 191, 0, 0, 0, 128, 0, 0, 128, 63};
.const .align 4 .b8 gy[36] = {0, 0, 128, 191, 0, 0, 0, 192, 0, 0, 128, 191, 0, 0, 0, 128, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 128, 63, 0, 0, 0, 64, 0, 0, 128, 63};
.const .align 1 .b8 mask_25[16] = {1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1};
.const .align 1 .b8 mask_50[16] = {1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1};
.const .align 1 .b8 mask_75[16] = {1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};
.global .align 4 .b8 prev_eye[12];
.global .align 4 .b8 eye[12];
.global .align 4 .f32 eye_variance;
.global .align 4 .b8 mvp[64];
.global .align 4 .b8 prev_mvp[64];
.global .align 8 .b8 gaze[8];
.global .align 4 .f32 g_apertureSize;
.global .align 16 .b8 bad_color[16];
.global .align 4 .f32 scene_epsilon;
.global .align 4 .b8 cutoff_color[12];
.global .align 4 .b8 bbox_min[12];
.global .align 4 .b8 bbox_max[12];
.global .align 1 .b8 position_buffer[1];
.global .align 1 .b8 normal_buffer[1];
.global .align 1 .b8 depth_buffer[1];
.global .align 1 .b8 diffuse_buffer[1];
.global .align 1 .b8 weight_buffer[1];
.global .align 1 .b8 history_buffer[1];
.global .align 1 .b8 history_cache[1];
.global .align 4 .b8 top_object[4];
.global .align 4 .u32 frame;
.global .align 8 .b8 launch_index[8];
.global .align 1 .b8 gaze_target[1];
.global .align 4 .b8 up[12];
.global .align 4 .b8 cam_target[12];
.global .align 4 .b8 _ZN21rti_internal_typeinfo8prev_eyeE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo3eyeE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo12eye_varianceE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo3mvpE[8] = {82, 97, 121, 0, 64, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo8prev_mvpE[8] = {82, 97, 121, 0, 64, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo4gazeE[8] = {82, 97, 121, 0, 8, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo14g_apertureSizeE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo9bad_colorE[8] = {82, 97, 121, 0, 16, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo13scene_epsilonE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo12cutoff_colorE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo8bbox_minE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo8bbox_maxE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo10top_objectE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo5frameE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo12launch_indexE[8] = {82, 97, 121, 0, 8, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo2upE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo10cam_targetE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 8 .u64 _ZN21rti_internal_register20reg_bitness_detectorE;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail0E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail1E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail2E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail3E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail4E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail5E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail6E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail7E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail8E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail9E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail0E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail1E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail2E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail3E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail4E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail5E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail6E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail7E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail8E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail9E;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_xE;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_yE;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_zE;
.global .align 8 .b8 _ZN21rti_internal_typename8prev_eyeE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 8 .b8 _ZN21rti_internal_typename3eyeE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 8 .b8 _ZN21rti_internal_typename12eye_varianceE[6] = {102, 108, 111, 97, 116, 0};
.global .align 16 .b8 _ZN21rti_internal_typename3mvpE[10] = {77, 97, 116, 114, 105, 120, 52, 120, 52, 0};
.global .align 16 .b8 _ZN21rti_internal_typename8prev_mvpE[10] = {77, 97, 116, 114, 105, 120, 52, 120, 52, 0};
.global .align 8 .b8 _ZN21rti_internal_typename4gazeE[7] = {102, 108, 111, 97, 116, 50, 0};
.global .align 8 .b8 _ZN21rti_internal_typename14g_apertureSizeE[6] = {102, 108, 111, 97, 116, 0};
.global .align 8 .b8 _ZN21rti_internal_typename9bad_colorE[7] = {102, 108, 111, 97, 116, 52, 0};
.global .align 8 .b8 _ZN21rti_internal_typename13scene_epsilonE[6] = {102, 108, 111, 97, 116, 0};
.global .align 8 .b8 _ZN21rti_internal_typename12cutoff_colorE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 8 .b8 _ZN21rti_internal_typename8bbox_minE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 8 .b8 _ZN21rti_internal_typename8bbox_maxE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 16 .b8 _ZN21rti_internal_typename10top_objectE[9] = {114, 116, 79, 98, 106, 101, 99, 116, 0};
.global .align 16 .b8 _ZN21rti_internal_typename5frameE[13] = {117, 110, 115, 105, 103, 110, 101, 100, 32, 105, 110, 116, 0};
.global .align 8 .b8 _ZN21rti_internal_typename12launch_indexE[6] = {117, 105, 110, 116, 50, 0};
.global .align 8 .b8 _ZN21rti_internal_typename2upE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 8 .b8 _ZN21rti_internal_typename10cam_targetE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 4 .u32 _ZN21rti_internal_typeenum8prev_eyeE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum3eyeE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum12eye_varianceE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum3mvpE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum8prev_mvpE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum4gazeE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum14g_apertureSizeE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum9bad_colorE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum13scene_epsilonE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum12cutoff_colorE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum8bbox_minE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum8bbox_maxE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum10top_objectE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum5frameE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum12launch_indexE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum2upE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum10cam_targetE = 4919;
.global .align 1 .b8 _ZN21rti_internal_semantic8prev_eyeE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic3eyeE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic12eye_varianceE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic3mvpE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic8prev_mvpE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic4gazeE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic14g_apertureSizeE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic9bad_colorE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic13scene_epsilonE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic12cutoff_colorE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic8bbox_minE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic8bbox_maxE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic10top_objectE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic5frameE[1];
.global .align 16 .b8 _ZN21rti_internal_semantic12launch_indexE[14] = {114, 116, 76, 97, 117, 110, 99, 104, 73, 110, 100, 101, 120, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic2upE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic10cam_targetE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation8prev_eyeE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation3eyeE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation12eye_varianceE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation3mvpE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation8prev_mvpE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation4gazeE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation14g_apertureSizeE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation9bad_colorE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation13scene_epsilonE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation12cutoff_colorE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation8bbox_minE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation8bbox_maxE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation10top_objectE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation5frameE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation12launch_indexE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation2upE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation10cam_targetE[1];
.global .align 16 .b8 $str[47] = {67, 97, 117, 103, 104, 116, 32, 101, 120, 99, 101, 112, 116, 105, 111, 110, 32, 48, 120, 37, 88, 32, 97, 116, 32, 108, 97, 117, 110, 99, 104, 32, 105, 110, 100, 101, 120, 32, 40, 37, 100, 44, 37, 100, 41, 10, 0};

.visible .entry _Z14g_buffer_tracev(

)
{
	.local .align 8 .b8 	__local_depot0[112];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<3>;
	.reg .b16 	%rs<4>;
	.reg .f32 	%f<108>;
	.reg .b32 	%r<326>;
	.reg .b64 	%rd<104>;


	mov.u64 	%rd103, __local_depot0;
	cvta.local.u64 	%SP, %rd103;
	ld.global.u32 	%r1, [frame];
	setp.ne.s32	%p1, %r1, 0;
	@%p1 bra 	BB0_2;

	ld.global.v2.u32 	{%r16, %r17}, [launch_index];
	cvt.u64.u32	%rd5, %r16;
	cvt.u64.u32	%rd6, %r17;
	mov.u64 	%rd45, normal_buffer;
	cvta.global.u64 	%rd4, %rd45;
	mov.u32 	%r14, 2;
	mov.u32 	%r15, 16;
	mov.u64 	%rd44, 0;
	// inline asm
	call (%rd3), _rt_buffer_get_64, (%rd4, %r14, %r15, %rd5, %rd6, %rd44, %rd44);
	// inline asm
	mov.f32 	%f12, 0f00000000;
	st.v4.f32 	[%rd3], {%f12, %f12, %f12, %f12};
	ld.global.v2.u32 	{%r20, %r21}, [launch_index];
	cvt.u64.u32	%rd11, %r20;
	cvt.u64.u32	%rd12, %r21;
	mov.u64 	%rd46, position_buffer;
	cvta.global.u64 	%rd10, %rd46;
	// inline asm
	call (%rd9), _rt_buffer_get_64, (%rd10, %r14, %r15, %rd11, %rd12, %rd44, %rd44);
	// inline asm
	st.v4.f32 	[%rd9], {%f12, %f12, %f12, %f12};
	ld.global.v2.u32 	{%r24, %r25}, [launch_index];
	cvt.u64.u32	%rd17, %r24;
	cvt.u64.u32	%rd18, %r25;
	mov.u64 	%rd47, depth_buffer;
	cvta.global.u64 	%rd16, %rd47;
	// inline asm
	call (%rd15), _rt_buffer_get_64, (%rd16, %r14, %r15, %rd17, %rd18, %rd44, %rd44);
	// inline asm
	st.v4.f32 	[%rd15], {%f12, %f12, %f12, %f12};
	ld.global.v2.u32 	{%r28, %r29}, [launch_index];
	cvt.u64.u32	%rd23, %r28;
	cvt.u64.u32	%rd24, %r29;
	mov.u64 	%rd48, diffuse_buffer;
	cvta.global.u64 	%rd22, %rd48;
	// inline asm
	call (%rd21), _rt_buffer_get_64, (%rd22, %r14, %r15, %rd23, %rd24, %rd44, %rd44);
	// inline asm
	st.v4.f32 	[%rd21], {%f12, %f12, %f12, %f12};
	ld.global.v2.u32 	{%r32, %r33}, [launch_index];
	cvt.u64.u32	%rd29, %r32;
	cvt.u64.u32	%rd30, %r33;
	mov.u64 	%rd49, weight_buffer;
	cvta.global.u64 	%rd28, %rd49;
	// inline asm
	call (%rd27), _rt_buffer_get_64, (%rd28, %r14, %r15, %rd29, %rd30, %rd44, %rd44);
	// inline asm
	st.v4.f32 	[%rd27], {%f12, %f12, %f12, %f12};
	ld.global.v2.u32 	{%r36, %r37}, [launch_index];
	cvt.u64.u32	%rd35, %r36;
	cvt.u64.u32	%rd36, %r37;
	mov.u64 	%rd50, history_buffer;
	cvta.global.u64 	%rd34, %rd50;
	// inline asm
	call (%rd33), _rt_buffer_get_64, (%rd34, %r14, %r15, %rd35, %rd36, %rd44, %rd44);
	// inline asm
	st.v4.f32 	[%rd33], {%f12, %f12, %f12, %f12};
	ld.global.v2.u32 	{%r40, %r41}, [launch_index];
	cvt.u64.u32	%rd41, %r40;
	cvt.u64.u32	%rd42, %r41;
	mov.u64 	%rd51, history_cache;
	cvta.global.u64 	%rd40, %rd51;
	// inline asm
	call (%rd39), _rt_buffer_get_64, (%rd40, %r14, %r15, %rd41, %rd42, %rd44, %rd44);
	// inline asm
	st.v4.f32 	[%rd39], {%f12, %f12, %f12, %f12};

BB0_2:
	mov.u64 	%rd58, position_buffer;
	cvta.global.u64 	%rd56, %rd58;
	mov.u32 	%r44, 2;
	mov.u32 	%r45, 16;
	// inline asm
	call (%rd52, %rd53, %rd54, %rd55), _rt_buffer_get_size_64, (%rd56, %r44, %r45);
	// inline asm
	cvt.rn.f32.u64	%f21, %rd52;
	cvt.rn.f32.u64	%f22, %rd53;
	ld.global.v2.u32 	{%r49, %r50}, [launch_index];
	cvt.u64.u32	%rd59, %r50;
	mul.lo.s64 	%rd60, %rd59, %rd52;
	cvt.u64.u32	%rd61, %r49;
	add.s64 	%rd62, %rd60, %rd61;
	cvt.u32.u64	%r53, %rd62;
	add.s32 	%r54, %r53, -176720271;
	shl.b32 	%r55, %r54, 4;
	add.s32 	%r56, %r55, -1383041155;
	add.s32 	%r57, %r53, -1817251798;
	xor.b32  	%r58, %r56, %r57;
	shr.u32 	%r59, %r54, 5;
	add.s32 	%r60, %r59, 2123724318;
	xor.b32  	%r61, %r58, %r60;
	shl.b32 	%r62, %r61, 4;
	add.s32 	%r63, %r62, -1556008596;
	add.s32 	%r64, %r61, 1013904242;
	shr.u32 	%r65, %r61, 5;
	add.s32 	%r66, %r65, -939442524;
	xor.b32  	%r67, %r63, %r64;
	xor.b32  	%r68, %r67, %r66;
	add.s32 	%r69, %r68, %r54;
	shl.b32 	%r70, %r69, 4;
	add.s32 	%r71, %r70, -1383041155;
	add.s32 	%r72, %r69, 1013904242;
	xor.b32  	%r73, %r71, %r72;
	shr.u32 	%r74, %r69, 5;
	add.s32 	%r75, %r74, 2123724318;
	xor.b32  	%r76, %r73, %r75;
	add.s32 	%r77, %r76, %r61;
	shl.b32 	%r78, %r77, 4;
	add.s32 	%r79, %r78, -1556008596;
	add.s32 	%r80, %r77, -626627285;
	shr.u32 	%r81, %r77, 5;
	add.s32 	%r82, %r81, -939442524;
	xor.b32  	%r83, %r79, %r80;
	xor.b32  	%r84, %r83, %r82;
	add.s32 	%r85, %r84, %r69;
	shl.b32 	%r86, %r85, 4;
	add.s32 	%r87, %r86, -1383041155;
	add.s32 	%r88, %r85, -626627285;
	xor.b32  	%r89, %r87, %r88;
	shr.u32 	%r90, %r85, 5;
	add.s32 	%r91, %r90, 2123724318;
	xor.b32  	%r92, %r89, %r91;
	add.s32 	%r93, %r92, %r77;
	shl.b32 	%r94, %r93, 4;
	add.s32 	%r95, %r94, -1556008596;
	add.s32 	%r96, %r93, 2027808484;
	shr.u32 	%r97, %r93, 5;
	add.s32 	%r98, %r97, -939442524;
	xor.b32  	%r99, %r95, %r96;
	xor.b32  	%r100, %r99, %r98;
	add.s32 	%r101, %r100, %r85;
	shl.b32 	%r102, %r101, 4;
	add.s32 	%r103, %r102, -1383041155;
	add.s32 	%r104, %r101, 2027808484;
	xor.b32  	%r105, %r103, %r104;
	shr.u32 	%r106, %r101, 5;
	add.s32 	%r107, %r106, 2123724318;
	xor.b32  	%r108, %r105, %r107;
	add.s32 	%r109, %r108, %r93;
	shl.b32 	%r110, %r109, 4;
	add.s32 	%r111, %r110, -1556008596;
	add.s32 	%r112, %r109, 387276957;
	shr.u32 	%r113, %r109, 5;
	add.s32 	%r114, %r113, -939442524;
	xor.b32  	%r115, %r111, %r112;
	xor.b32  	%r116, %r115, %r114;
	add.s32 	%r117, %r116, %r101;
	shl.b32 	%r118, %r117, 4;
	add.s32 	%r119, %r118, -1383041155;
	add.s32 	%r120, %r117, 387276957;
	xor.b32  	%r121, %r119, %r120;
	shr.u32 	%r122, %r117, 5;
	add.s32 	%r123, %r122, 2123724318;
	xor.b32  	%r124, %r121, %r123;
	add.s32 	%r125, %r124, %r109;
	shl.b32 	%r126, %r125, 4;
	add.s32 	%r127, %r126, -1556008596;
	add.s32 	%r128, %r125, -1253254570;
	shr.u32 	%r129, %r125, 5;
	add.s32 	%r130, %r129, -939442524;
	xor.b32  	%r131, %r127, %r128;
	xor.b32  	%r132, %r131, %r130;
	add.s32 	%r133, %r132, %r117;
	shl.b32 	%r134, %r133, 4;
	add.s32 	%r135, %r134, -1383041155;
	add.s32 	%r136, %r133, -1253254570;
	xor.b32  	%r137, %r135, %r136;
	shr.u32 	%r138, %r133, 5;
	add.s32 	%r139, %r138, 2123724318;
	xor.b32  	%r140, %r137, %r139;
	add.s32 	%r141, %r140, %r125;
	shl.b32 	%r142, %r141, 4;
	add.s32 	%r143, %r142, -1556008596;
	add.s32 	%r144, %r141, 1401181199;
	shr.u32 	%r145, %r141, 5;
	add.s32 	%r146, %r145, -939442524;
	xor.b32  	%r147, %r143, %r144;
	xor.b32  	%r148, %r147, %r146;
	add.s32 	%r149, %r148, %r133;
	shl.b32 	%r150, %r149, 4;
	add.s32 	%r151, %r150, -1383041155;
	add.s32 	%r152, %r149, 1401181199;
	xor.b32  	%r153, %r151, %r152;
	shr.u32 	%r154, %r149, 5;
	add.s32 	%r155, %r154, 2123724318;
	xor.b32  	%r156, %r153, %r155;
	add.s32 	%r157, %r156, %r141;
	shl.b32 	%r158, %r157, 4;
	add.s32 	%r159, %r158, -1556008596;
	add.s32 	%r160, %r157, -239350328;
	shr.u32 	%r161, %r157, 5;
	add.s32 	%r162, %r161, -939442524;
	xor.b32  	%r163, %r159, %r160;
	xor.b32  	%r164, %r163, %r162;
	add.s32 	%r165, %r164, %r149;
	shl.b32 	%r166, %r165, 4;
	add.s32 	%r167, %r166, -1383041155;
	add.s32 	%r168, %r165, -239350328;
	xor.b32  	%r169, %r167, %r168;
	shr.u32 	%r170, %r165, 5;
	add.s32 	%r171, %r170, 2123724318;
	xor.b32  	%r172, %r169, %r171;
	add.s32 	%r173, %r172, %r157;
	shl.b32 	%r174, %r173, 4;
	add.s32 	%r175, %r174, -1556008596;
	add.s32 	%r176, %r173, -1879881855;
	shr.u32 	%r177, %r173, 5;
	add.s32 	%r178, %r177, -939442524;
	xor.b32  	%r179, %r175, %r176;
	xor.b32  	%r180, %r179, %r178;
	add.s32 	%r181, %r180, %r165;
	shl.b32 	%r182, %r181, 4;
	add.s32 	%r183, %r182, -1383041155;
	add.s32 	%r184, %r181, -1879881855;
	xor.b32  	%r185, %r183, %r184;
	shr.u32 	%r186, %r181, 5;
	add.s32 	%r187, %r186, 2123724318;
	xor.b32  	%r188, %r185, %r187;
	add.s32 	%r189, %r188, %r173;
	shl.b32 	%r190, %r189, 4;
	add.s32 	%r191, %r190, -1556008596;
	add.s32 	%r192, %r189, 774553914;
	shr.u32 	%r193, %r189, 5;
	add.s32 	%r194, %r193, -939442524;
	xor.b32  	%r195, %r191, %r192;
	xor.b32  	%r196, %r195, %r194;
	add.s32 	%r197, %r196, %r181;
	shl.b32 	%r198, %r197, 4;
	add.s32 	%r199, %r198, -1383041155;
	add.s32 	%r200, %r197, 774553914;
	xor.b32  	%r201, %r199, %r200;
	shr.u32 	%r202, %r197, 5;
	add.s32 	%r203, %r202, 2123724318;
	xor.b32  	%r204, %r201, %r203;
	add.s32 	%r205, %r204, %r189;
	shl.b32 	%r206, %r205, 4;
	add.s32 	%r207, %r206, -1556008596;
	add.s32 	%r208, %r205, -865977613;
	shr.u32 	%r209, %r205, 5;
	add.s32 	%r210, %r209, -939442524;
	xor.b32  	%r211, %r207, %r208;
	xor.b32  	%r212, %r211, %r210;
	add.s32 	%r213, %r212, %r197;
	shl.b32 	%r214, %r213, 4;
	add.s32 	%r215, %r214, -1383041155;
	add.s32 	%r216, %r213, -865977613;
	xor.b32  	%r217, %r215, %r216;
	shr.u32 	%r218, %r213, 5;
	add.s32 	%r219, %r218, 2123724318;
	xor.b32  	%r220, %r217, %r219;
	add.s32 	%r221, %r220, %r205;
	shl.b32 	%r222, %r221, 4;
	add.s32 	%r223, %r222, -1556008596;
	add.s32 	%r224, %r221, 1788458156;
	shr.u32 	%r225, %r221, 5;
	add.s32 	%r226, %r225, -939442524;
	xor.b32  	%r227, %r223, %r224;
	xor.b32  	%r228, %r227, %r226;
	add.s32 	%r229, %r228, %r213;
	shl.b32 	%r230, %r229, 4;
	add.s32 	%r231, %r230, -1383041155;
	add.s32 	%r232, %r229, 1788458156;
	xor.b32  	%r233, %r231, %r232;
	shr.u32 	%r234, %r229, 5;
	add.s32 	%r235, %r234, 2123724318;
	xor.b32  	%r236, %r233, %r235;
	add.s32 	%r237, %r236, %r221;
	shl.b32 	%r238, %r237, 4;
	add.s32 	%r239, %r238, -1556008596;
	add.s32 	%r240, %r237, 147926629;
	shr.u32 	%r241, %r237, 5;
	add.s32 	%r242, %r241, -939442524;
	xor.b32  	%r243, %r239, %r240;
	xor.b32  	%r244, %r243, %r242;
	add.s32 	%r245, %r244, %r229;
	shl.b32 	%r246, %r245, 4;
	add.s32 	%r247, %r246, -1383041155;
	add.s32 	%r248, %r245, 147926629;
	xor.b32  	%r249, %r247, %r248;
	shr.u32 	%r250, %r245, 5;
	add.s32 	%r251, %r250, 2123724318;
	xor.b32  	%r252, %r249, %r251;
	add.s32 	%r253, %r252, %r237;
	shl.b32 	%r254, %r253, 4;
	add.s32 	%r255, %r254, -1556008596;
	add.s32 	%r256, %r253, -1492604898;
	shr.u32 	%r257, %r253, 5;
	add.s32 	%r258, %r257, -939442524;
	xor.b32  	%r259, %r255, %r256;
	xor.b32  	%r260, %r259, %r258;
	add.s32 	%r261, %r260, %r245;
	shl.b32 	%r262, %r261, 4;
	add.s32 	%r263, %r262, -1383041155;
	add.s32 	%r264, %r261, -1492604898;
	xor.b32  	%r265, %r263, %r264;
	shr.u32 	%r266, %r261, 5;
	add.s32 	%r267, %r266, 2123724318;
	xor.b32  	%r268, %r265, %r267;
	add.s32 	%r269, %r268, %r253;
	shl.b32 	%r270, %r269, 4;
	add.s32 	%r271, %r270, -1556008596;
	add.s32 	%r272, %r269, 1161830871;
	shr.u32 	%r273, %r269, 5;
	add.s32 	%r274, %r273, -939442524;
	xor.b32  	%r275, %r271, %r272;
	xor.b32  	%r276, %r275, %r274;
	add.s32 	%r277, %r276, %r261;
	shl.b32 	%r278, %r277, 4;
	add.s32 	%r279, %r278, -1383041155;
	add.s32 	%r280, %r277, 1161830871;
	xor.b32  	%r281, %r279, %r280;
	shr.u32 	%r282, %r277, 5;
	add.s32 	%r283, %r282, 2123724318;
	xor.b32  	%r284, %r281, %r283;
	add.s32 	%r285, %r284, %r269;
	shl.b32 	%r286, %r285, 4;
	add.s32 	%r287, %r286, -1556008596;
	add.s32 	%r288, %r285, -478700656;
	shr.u32 	%r289, %r285, 5;
	add.s32 	%r290, %r289, -939442524;
	xor.b32  	%r291, %r287, %r288;
	xor.b32  	%r292, %r291, %r290;
	cvt.rn.f32.u32	%f23, %r49;
	cvt.rn.f32.u32	%f24, %r50;
	div.rn.f32 	%f25, %f23, %f21;
	div.rn.f32 	%f26, %f24, %f22;
	fma.rn.f32 	%f27, %f25, 0f40000000, 0fBF800000;
	fma.rn.f32 	%f28, %f26, 0f40000000, 0fBF800000;
	ld.global.f32 	%f29, [mvp];
	ld.global.f32 	%f30, [mvp+4];
	mul.f32 	%f31, %f30, %f28;
	fma.rn.f32 	%f32, %f29, %f27, %f31;
	ld.global.f32 	%f33, [mvp+8];
	sub.f32 	%f34, %f32, %f33;
	ld.global.f32 	%f35, [mvp+12];
	add.f32 	%f36, %f35, %f34;
	ld.global.f32 	%f37, [mvp+16];
	ld.global.f32 	%f38, [mvp+20];
	mul.f32 	%f39, %f28, %f38;
	fma.rn.f32 	%f40, %f27, %f37, %f39;
	ld.global.f32 	%f41, [mvp+24];
	sub.f32 	%f42, %f40, %f41;
	ld.global.f32 	%f43, [mvp+28];
	add.f32 	%f44, %f43, %f42;
	ld.global.f32 	%f45, [mvp+32];
	ld.global.f32 	%f46, [mvp+36];
	mul.f32 	%f47, %f28, %f46;
	fma.rn.f32 	%f48, %f27, %f45, %f47;
	ld.global.f32 	%f49, [mvp+40];
	sub.f32 	%f50, %f48, %f49;
	ld.global.f32 	%f51, [mvp+44];
	add.f32 	%f52, %f51, %f50;
	ld.global.f32 	%f53, [mvp+48];
	ld.global.f32 	%f54, [mvp+52];
	mul.f32 	%f55, %f28, %f54;
	fma.rn.f32 	%f56, %f27, %f53, %f55;
	ld.global.f32 	%f57, [mvp+56];
	sub.f32 	%f58, %f56, %f57;
	ld.global.f32 	%f59, [mvp+60];
	add.f32 	%f60, %f59, %f58;
	rcp.rn.f32 	%f61, %f60;
	mul.f32 	%f62, %f36, %f61;
	mul.f32 	%f63, %f44, %f61;
	mul.f32 	%f64, %f52, %f61;
	ld.global.f32 	%f15, [eye+8];
	ld.global.f32 	%f14, [eye+4];
	ld.global.f32 	%f13, [eye];
	sub.f32 	%f65, %f62, %f13;
	sub.f32 	%f66, %f63, %f14;
	sub.f32 	%f67, %f64, %f15;
	mul.f32 	%f68, %f66, %f66;
	fma.rn.f32 	%f69, %f65, %f65, %f68;
	fma.rn.f32 	%f70, %f67, %f67, %f69;
	sqrt.rn.f32 	%f71, %f70;
	rcp.rn.f32 	%f72, %f71;
	mul.f32 	%f16, %f65, %f72;
	mul.f32 	%f17, %f66, %f72;
	mul.f32 	%f18, %f67, %f72;
	add.u64 	%rd57, %SP, 0;
	cvta.to.local.u64 	%rd63, %rd57;
	mov.u32 	%r293, 1065353216;
	st.local.u32 	[%rd63+20], %r293;
	st.local.u32 	[%rd63+16], %r293;
	st.local.u32 	[%rd63+12], %r293;
	mov.f32 	%f73, 0f3F800000;
	add.s32 	%r294, %r292, %r277;
	mov.u32 	%r47, 0;
	st.local.v2.u32 	[%rd63], {%r47, %r294};
	st.local.v2.f32 	[%rd63+24], {%f73, %f73};
	st.local.u32 	[%rd63+32], %r293;
	mov.f32 	%f74, 0f00000000;
	st.local.v2.f32 	[%rd63+72], {%f74, %f74};
	st.local.v2.f32 	[%rd63+88], {%f74, %f74};
	st.local.v2.f32 	[%rd63+80], {%f74, %f74};
	mov.f32 	%f75, 0fBF800000;
	st.local.v2.f32 	[%rd63+96], {%f75, %f75};
	mov.u16 	%rs1, 0;
	st.local.u8 	[%rd63+8], %rs1;
	ld.global.f32 	%f19, [scene_epsilon];
	ld.global.u32 	%r46, [top_object];
	mov.f32 	%f20, 0f6C4ECB8F;
	mov.u32 	%r48, 112;
	// inline asm
	call _rt_trace_64, (%r46, %f13, %f14, %f15, %f16, %f17, %f18, %r47, %f19, %f20, %rd57, %r48);
	// inline asm
	ld.local.f32 	%f76, [%rd63+12];
	add.f32 	%f105, %f76, 0f00000000;
	ld.local.v2.f32 	{%f77, %f78}, [%rd63+16];
	add.f32 	%f106, %f77, 0f00000000;
	add.f32 	%f107, %f78, 0f00000000;
	ld.local.u64 	%rd2, [%rd63+8];
	cvt.u16.u64	%rs2, %rd2;
	and.b16  	%rs3, %rs2, 255;
	setp.eq.s16	%p2, %rs3, 0;
	@%p2 bra 	BB0_4;

	shr.u64 	%rd64, %rd2, 32;
	cvt.u32.u64	%r295, %rd64;
	mov.b32 	 %f79, %r295;
	add.f32 	%f105, %f105, %f79;
	add.f32 	%f106, %f106, %f77;
	add.f32 	%f107, %f107, %f78;

BB0_4:
	add.u64 	%rd102, %SP, 0;
	cvta.to.local.u64 	%rd101, %rd102;
	add.s64 	%rd100, %rd101, 12;
	ld.global.v2.u32 	{%r306, %r307}, [launch_index];
	cvt.u64.u32	%rd67, %r306;
	cvt.u64.u32	%rd68, %r307;
	mov.u64 	%rd94, 0;
	// inline asm
	call (%rd65), _rt_buffer_get_64, (%rd56, %r44, %r45, %rd67, %rd68, %rd94, %rd94);
	// inline asm
	ld.local.v2.f32 	{%f80, %f81}, [%rd100+36];
	ld.local.f32 	%f82, [%rd100+44];
	st.v4.f32 	[%rd65], {%f80, %f81, %f82, %f73};
	ld.global.v2.u32 	{%r310, %r311}, [launch_index];
	cvt.u64.u32	%rd73, %r310;
	cvt.u64.u32	%rd74, %r311;
	mov.u64 	%rd96, normal_buffer;
	cvta.global.u64 	%rd72, %rd96;
	// inline asm
	call (%rd71), _rt_buffer_get_64, (%rd72, %r44, %r45, %rd73, %rd74, %rd94, %rd94);
	// inline asm
	ld.local.v2.f32 	{%f86, %f87}, [%rd100+60];
	ld.local.f32 	%f90, [%rd100+68];
	ld.local.f32 	%f91, [%rd100+24];
	fma.rn.f32 	%f92, %f90, 0f3F000000, 0f3F000000;
	fma.rn.f32 	%f93, %f87, 0f3F000000, 0f3F000000;
	fma.rn.f32 	%f94, %f86, 0f3F000000, 0f3F000000;
	st.v4.f32 	[%rd71], {%f94, %f93, %f92, %f91};
	ld.global.v2.u32 	{%r314, %r315}, [launch_index];
	cvt.u64.u32	%rd79, %r314;
	cvt.u64.u32	%rd80, %r315;
	mov.u64 	%rd97, depth_buffer;
	cvta.global.u64 	%rd78, %rd97;
	// inline asm
	call (%rd77), _rt_buffer_get_64, (%rd78, %r44, %r45, %rd79, %rd80, %rd94, %rd94);
	// inline asm
	ld.local.v2.f32 	{%f95, %f96}, [%rd100+76];
	ld.local.f32 	%f97, [%rd100+72];
	st.v4.f32 	[%rd77], {%f97, %f95, %f96, %f73};
	ld.global.v2.u32 	{%r318, %r319}, [launch_index];
	cvt.u64.u32	%rd85, %r318;
	cvt.u64.u32	%rd86, %r319;
	mov.u64 	%rd98, diffuse_buffer;
	cvta.global.u64 	%rd84, %rd98;
	// inline asm
	call (%rd83), _rt_buffer_get_64, (%rd84, %r44, %r45, %rd85, %rd86, %rd94, %rd94);
	// inline asm
	st.v4.f32 	[%rd83], {%f105, %f106, %f107, %f73};
	ld.global.v2.u32 	{%r322, %r323}, [launch_index];
	cvt.u64.u32	%rd91, %r322;
	cvt.u64.u32	%rd92, %r323;
	mov.u64 	%rd99, weight_buffer;
	cvta.global.u64 	%rd90, %rd99;
	// inline asm
	call (%rd89), _rt_buffer_get_64, (%rd90, %r44, %r45, %rd91, %rd92, %rd94, %rd94);
	// inline asm
	ld.local.v2.f32 	{%f100, %f101}, [%rd100+84];
	st.v4.f32 	[%rd89], {%f100, %f101, %f74, %f73};
	ret;
}

	// .globl	_Z9exceptionv
.visible .entry _Z9exceptionv(

)
{
	.local .align 8 .b8 	__local_depot1[16];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<2>;
	.reg .f32 	%f<9>;
	.reg .b32 	%r<15>;
	.reg .b64 	%rd<13>;


	mov.u64 	%rd12, __local_depot1;
	cvta.local.u64 	%SP, %rd12;
	// inline asm
	call (%r4), _rt_get_exception_code, ();
	// inline asm
	ld.global.v2.u32 	{%r6, %r7}, [launch_index];
	// inline asm
	call (%r5), _rt_print_active, ();
	// inline asm
	setp.eq.s32	%p1, %r5, 0;
	@%p1 bra 	BB1_2;

	add.u64 	%rd1, %SP, 0;
	cvta.to.local.u64 	%rd2, %rd1;
	st.local.v2.u32 	[%rd2], {%r4, %r6};
	st.local.u32 	[%rd2+8], %r7;
	mov.u64 	%rd3, $str;
	cvta.global.u64 	%rd4, %rd3;
	// Callseq Start 0
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd4;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd1;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r8, [retval0+0];
	
	//{
	}// Callseq End 0

BB1_2:
	ld.global.v2.u32 	{%r11, %r12}, [launch_index];
	cvt.u64.u32	%rd7, %r11;
	cvt.u64.u32	%rd8, %r12;
	mov.u64 	%rd11, diffuse_buffer;
	cvta.global.u64 	%rd6, %rd11;
	mov.u32 	%r9, 2;
	mov.u32 	%r10, 16;
	mov.u64 	%rd10, 0;
	// inline asm
	call (%rd5), _rt_buffer_get_64, (%rd6, %r9, %r10, %rd7, %rd8, %rd10, %rd10);
	// inline asm
	ld.global.v4.f32 	{%f1, %f2, %f3, %f4}, [bad_color];
	st.v4.f32 	[%rd5], {%f1, %f2, %f3, %f4};
	ret;
}


